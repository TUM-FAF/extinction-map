{"version":3,"sources":["components/Map/Map.jsx","components/App/App.jsx","index.jsx"],"names":["position","MapContainer","props","extinctAnimals","data","sliderValues","split","center","zoom","id","TileLayer","url","map","el","index","year","icon","L","Icon","iconUrl","image","src","iconAnchor","popupAnchor","iconSize","parseInt","width","height","Marker","key","name","Popup","region","createNewMarker","isMobile","a","check","navigator","userAgent","vendor","window","opera","test","substr","mobilecheck","currentYear","Date","getFullYear","dataJson","combinedData","Object","keys","reduce","acc","concat","minSliderValue","Math","min","maxSliderValue","max","defaultSliderValues","toString","ReactDOM","render","useState","setSliderValues","className","ReactSlider","thumbClassName","trackClassName","defaultValue","renderThumb","state","valueNow","orientation","invert","pearling","onChange","values","minDistance","document","getElementById"],"mappings":"utzCAKMA,EAAW,CAAC,SAAU,WAyCrB,IAAMC,EAAe,SAAAC,GAC1B,IAAMC,EAAiBD,EAAME,KACvBC,EAAeH,EAAMG,aAAaC,MAAM,KAE9C,OACE,kBAAC,IAAD,CAAKC,OAAQP,EAAUQ,KAAM,EAAGC,GAAG,SACjC,kBAACC,EAAA,EAAD,CAAWC,IAzCf,qGA0CKR,EAAeS,KAAI,SAACC,EAAIC,GAAL,OAClBD,EAAGE,MAAQV,EAAa,IAAMQ,EAAGE,MAAQV,EAAa,GAlC9D,SAAyBQ,EAAIC,GAC3B,IAAME,EAAO,IAAIC,IAAEC,KAAK,CACtBC,QAASN,EAAGO,MAAMC,IAClBC,WAAY,CAAC,EAAG,IAChBC,YAAa,CAAC,IAAK,IACnBC,SAAU,CAACC,SAASZ,EAAGO,MAAMM,OAAQD,SAASZ,EAAGO,MAAMO,WAGzD,OACE,kBAACC,EAAA,EAAD,CAAQC,IAAKhB,EAAGiB,KAAOhB,EAAOd,SAAUa,EAAGb,SAAUgB,KAAMA,GACzD,kBAACe,EAAA,EAAD,KACE,yCADF,IAC0BlB,EAAGiB,KAC3B,6BACA,2CAHF,IAG4BjB,EAAGmB,SAsBzBC,CAAgBpB,EAAIC,GACpB,U,gBCXZ,IAAMoB,EAhBN,WACE,IACUC,EADNC,GAAQ,EAYZ,OAXUD,EAUPE,UAAUC,WAAaD,UAAUE,QAAUC,OAAOC,OARjD,2TAA2TC,KACzTP,IAEF,0kDAA0kDO,KACxkDP,EAAEQ,OAAO,EAAG,OAGdP,GAAQ,GAELA,EAGQQ,GACXC,GAAc,IAAIC,MAAOC,cAKzB3C,EAAO4C,EAKPC,EAAeC,OAAOC,KAAK/C,GAAMgD,QACrC,SAACC,EAAKxC,GAAN,OAAawC,EAAIC,OAAOlD,EAAKS,MAC7B,IAGI0C,EAAiBC,KAAKC,IAAL,MAAAD,KAAI,YAAQP,EAAarC,KAAI,SAAAC,GAAE,OAAIA,EAAGE,UACvD2C,EAAiBF,KAAKG,IAAL,MAAAH,KAAI,YAAQP,EAAarC,KAAI,SAAAC,GAAE,OAAIA,EAAGE,UACvD6C,EAAsB,CAACL,EAAgBG,GAAgBG,WC1D7DC,IAASC,OAAO,mBD4DG,WAAM,MAKiBC,mBAASJ,GAL1B,mBAKhBvD,EALgB,KAKF4D,EALE,KAWvB,OACE,yBAAKC,UAAU,OACb,kBAAC,EAAD,CAAc9D,KAAM6C,EAAc5C,aAAcA,IAChD,kBAAC8D,EAAA,EAAD,CACED,UAAWhC,EAAW,kBAAoB,oBAC1CkC,eAAe,gBACfC,eAAe,gBACfC,aAAc,CAACf,EAAgBV,GAC/B0B,YAAa,SAACrE,EAAOsE,GAAR,OAAkB,wBAAStE,EAAQsE,EAAMC,WACtDC,YAAaxC,EAAW,WAAa,aACrCyC,OAAQzC,EACR0C,UAAQ,EACRC,SAhBN,SAAkBC,GAChBb,EAAgBa,EAAOjB,aAgBnBJ,IAAKF,EACLI,IAAKd,EACLkC,YAAa,QCtFL,MAASC,SAASC,eAAe,W","file":"static/js/main.9a22c630.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Map.css\";\nimport { Map, TileLayer, Marker, Popup } from \"react-leaflet\";\nimport L from \"leaflet\";\n\nconst position = [47.00367, 28.907089];\n\nconst worldImaginary =\n  \"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\";\n\nconst natGeo =\n  \"https://server.arcgisonline.com/ArcGIS/rest/services/NatGeo_World_Map/MapServer/tile/{z}/{y}/{x}\";\n\nconst map = \"https://{s}.tile.opentopomap.org/{z}/{x}/{y}.png\";\n\n/**\n *\n * @param {import(\"../App\").ExtinctAnimal} el\n * @param {number} index\n */\nfunction createNewMarker(el, index) {\n  const icon = new L.Icon({\n    iconUrl: el.image.src,\n    iconAnchor: [5, 55],\n    popupAnchor: [10, -44],\n    iconSize: [parseInt(el.image.width), parseInt(el.image.height)]\n  });\n\n  return (\n    <Marker key={el.name + index} position={el.position} icon={icon}>\n      <Popup>\n        <strong>Name:</strong> {el.name}\n        <br />\n        <strong>Region:</strong> {el.region}\n      </Popup>\n    </Marker>\n  );\n}\n\n/**\n *\n * @param {{\n * data: import(\"../App\").ExtinctAnimal[];\n * sliderValues: string;\n * }} props\n */\nexport const MapContainer = props => {\n  const extinctAnimals = props.data;\n  const sliderValues = props.sliderValues.split(\",\");\n\n  return (\n    <Map center={position} zoom={3} id=\"mapid\">\n      <TileLayer url={natGeo} />\n      {extinctAnimals.map((el, index) =>\n        el.year >= sliderValues[0] && el.year <= sliderValues[1]\n          ? createNewMarker(el, index)\n          : null\n      )}\n    </Map>\n  );\n};\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport { MapContainer } from \"../Map\";\nimport dataJson from \"../../data/data.json\";\nimport ReactSlider from \"react-slider\";\n\n/**\n * @typedef {Object} Data\n * @property {ExtinctAnimal[]} Africa\n * @property {ExtinctAnimal[]} Asia\n * @property {ExtinctAnimal[]} NorthAmerica\n * @property {ExtinctAnimal[]} Oceania\n * @property {ExtinctAnimal[]} SouthAmerica\n */\n\n/**\n * @typedef {Object} ExtinctAnimal\n * @property {string} name\n * @property {[[number, number], [number, number]]} bounds\n * @property {string} region\n * @property {[number, number]} position\n * @property {number} year\n * @property {{\n *  src: string,\n *  width: string,\n *  height: string\n * }} image\n */\n\nfunction mobilecheck() {\n  var check = false;\n  (function(a) {\n    if (\n      /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(\n        a\n      ) ||\n      /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(\n        a.substr(0, 4)\n      )\n    )\n      check = true;\n  })(navigator.userAgent || navigator.vendor || window.opera);\n  return check;\n}\n\nconst isMobile = mobilecheck();\nconst currentYear = new Date().getFullYear();\n\n/**\n * @type {Data}\n */\nconst data = dataJson;\n\n/**\n * @type {ExtinctAnimal[]}\n */\nconst combinedData = Object.keys(data).reduce(\n  (acc, el) => acc.concat(data[el]),\n  []\n);\n\nconst minSliderValue = Math.min(...combinedData.map(el => el.year));\nconst maxSliderValue = Math.max(...combinedData.map(el => el.year));\nconst defaultSliderValues = [minSliderValue, maxSliderValue].toString();\n\nexport const App = () => {\n  /**\n   * @type {[string, Function]} sliderValues\n   * @todo investigate problem with updating when an array is used as value\n   */\n  const [sliderValues, setSliderValues] = useState(defaultSliderValues);\n\n  function onChange(values) {\n    setSliderValues(values.toString());\n  }\n\n  return (\n    <div className=\"App\">\n      <MapContainer data={combinedData} sliderValues={sliderValues} />\n      <ReactSlider\n        className={isMobile ? \"vertical-slider\" : \"horizontal-slider\"}\n        thumbClassName=\"example-thumb\"\n        trackClassName=\"example-track\"\n        defaultValue={[minSliderValue, currentYear]}\n        renderThumb={(props, state) => <div {...props}>{state.valueNow}</div>}\n        orientation={isMobile ? \"vertical\" : \"horizontal\"}\n        invert={isMobile}\n        pearling\n        onChange={onChange}\n        min={minSliderValue}\n        max={currentYear}\n        minDistance={10}\n      />\n    </div>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { App } from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}